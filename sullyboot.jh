entity Client {
	nom String required,
    nomCourt String required,
    image ImageBlob
}

entity Projet {
	nom String required,
    nomCourt String required,
    image ImageBlob
}

entity NumeroAffaire {
	nom String required
}

entity Application {
	nom String required,
    nomCourt String required,
    langagePrincipal Langage,
    image ImageBlob
}

enum Langage {
	JAVA, JAVASCRIPT, PHP, DOTNET, DELPHI, C, CPP, OTHER
}

entity Dependency {
	nom String required,
    version String
}

entity Outil {
    image ImageBlob,
	categorie CategorieOutil required,
	nom String required,
    url String
}

enum CategorieOutil {
	CONCEPTION, DEVELOPPEMENT, TEST, MANAGEMENT,
    DOCUMENT, ANALYSE, DEPLOIEMENT, SGBD, 
    SERVER_APPLICATION, OTHER
} 

entity Traitement {
	nom String required,
    description String,
    finalite Finalite,
    fondementTraitement FondementTraitement,
    typeTraitement TypeTraitement,
    sousTraitant String,
    technologie String,
    risque String,
    mesureSecurite String,
    documentation String,
    aipd String,
    information String,
    procedureExerciceDroits String,
    remarques String,
    dateDebut LocalDate,
    dateFin LocalDate,
    dateMAJ LocalDate 
}

entity DonneePersonnelle {
	nom String required,
	categorieFonctionnelle CategorieFonctionnelle,
	categorieRGPD CategorieRGPD,
    source Source,
    vulnerable Boolean,
    destinataire Destinataire,
	natureTransmissionPaysTiers NatureTransmissionPaysTiers,
    delaiConservation String required,
    echange String
}

enum Finalite {
	GENERAL_ADMIN_PERSONNEL, GENERAL_GESTION_PERSONNEL, GENERAL_PLANIF_ACTIVITE, OTHER
}
enum FondementTraitement {
	CONSENTEMENT, NECESSITE_CONTRACTUEL, OBLIGATION_LEGAL, OTHER
}

enum CategorieFonctionnelle {
	IDENTIFICATION_PERSONNELLE, IDENTIFICATION_ELECTRONIQUE, IDENTIFICATION_BIOMETRIQUE, OTHER
}

enum TypeTraitement {
	NORMAL, PROFILAGE_PREVISION, JURIDIQUE, SURVEILLANCE, GRANDE_ECHELLE, COMBINAISONS, EXERCICE_DROIT, NOUVELLES_TECHNOLOGIES, SURVEILLANCE_PUBLIC
}

enum CategorieRGPD {
	GENETIQUE, BIOMETRIQUE, SANTE, ORIGINE, OPINIOONS, CONVICTIONS, SYNDICALE, VIE_SEXUELLE, PENALE, SECRET_PROFESSIONNEL, COMMUNICATION_ELECTRONIQUE, LOCALISATION, FINANCIERE, AUTRE
}

enum Source {
	PERSONNE, RELATION, CONSEILLER_PROFESSIONNEL, EMPLOYEUR, AUTRE_ENTREPRISE_PRIVEE, SERVICE_PUBLIC, JUSTICE_POLICE, SECURITEE_SOCIALE, BANQUE_ASSURANCE, MARKETING, AUTRE
}

enum Destinataire {
	AUCUN, PERSONNE, RELATION, CONSEILLER_PROFESSIONNEL, EMPLOYEUR, AUTRE_ENTREPRISE_PRIVEE, SERVICE_PUBLIC, JUSTICE_POLICE, SECURITEE_SOCIALE, BANQUE_ASSURANCE, MARKETING, AUTRE
}

enum NatureTransmissionPaysTiers {
	DECISION_ADEQUATION, GARANTIES_APPROPRIEES, REGLES_ENTREPRISE, DEROGATION, CONDITION_ARTICLE_49_2
}

relationship OneToMany {
	Client{Projets} to Projet
}

relationship OneToMany {
    Projet{numerosAffaires} to NumeroAffaire
}

relationship OneToMany {
	Projet{applications} to Application
}

relationship OneToMany {
    Application{dependencies} to Dependency
}

relationship OneToMany {
    Application{outils} to Outil
}

relationship OneToMany {
    Application{traitements} to Traitement
}

relationship OneToMany {
    Traitement{donneesPersonnelles} to DonneePersonnelle
}

// Set pagination options
paginate Client with pagination
paginate Projet with pagination
paginate NumeroAffaire with pagination
paginate Application with pagination
paginate Dependency with pagination
paginate Traitement with pagination
paginate DonneePersonnelle with pagination

service Client with serviceClass
service Projet with serviceClass
service Application with serviceClass
service Dependency with serviceClass
service Outil with serviceClass
service Traitement with serviceClass
service DonneePersonnelle with serviceClass
